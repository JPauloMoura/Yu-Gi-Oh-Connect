{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A API Yu-Gi-Oh! Connect permite criar, atualizar, listar, recuperar e excluir informações de duelistas. Duelistas são como são chamados os jogadores de Yu-Gi-oh TCG. E para ajudar a conectar esses jogadores novas batalhas esse projeto foi criado!",
        "title": "Yu-Gi-Oh-ConnectI",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3001",
    "basePath": "/",
    "paths": {
        "/duelist": {
            "get": {
                "description": "Realiza a listagem de duelista. Podemos obter a lista de duelistas utilizando paginação e ordenação dos resultados.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duelist"
                ],
                "summary": "ListDuelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "A ordem de classificação dos Duelistas (asc ou desc) ",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "O campo pelo qual os Duelistas devem ser classificados (name, birthDate)",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "O número máximo de Duelistas a serem retornados. O padrão é 10.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "O número da página de resultados",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Duelist"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Realiza a criação de um novo perfil de duelista na plataforma. Todos os campos da body são requireds, exceto \"presentation\". As informações de endereço seram preenchidas automaticamentes com base no Cep informado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duelist"
                ],
                "summary": "CreateDuelist",
                "parameters": [
                    {
                        "description": "CreateDuelistDTO Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateDuelistDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Duelist"
                        }
                    }
                }
            }
        },
        "/duelist/{uid}": {
            "get": {
                "description": "Busca as informações de um duelista com base no seu uid.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duelist"
                ],
                "summary": "FindDuelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "6457d5dc-6a4b-409f-972e-f8bb8f9f9f67",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Duelist"
                        }
                    }
                }
            },
            "put": {
                "description": "Realiza a atualização de um perfil de duelista na plataforma.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duelist"
                ],
                "summary": "UpdateDuelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "6457d5dc-6a4b-409f-972e-f8bb8f9f9f67",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateDuelistDTO object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDuelistDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Realiza a deleção de um duelista com base no seu uid.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duelist"
                ],
                "summary": "DeleteDuelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "6457d5dc-6a4b-409f-972e-f8bb8f9f9f67",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateDuelistDTO": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string",
                    "example": "14/09/1992"
                },
                "cep": {
                    "type": "string",
                    "example": "72007040"
                },
                "email": {
                    "type": "string",
                    "example": "jp@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "JP"
                },
                "phone": {
                    "type": "string",
                    "example": "61999876543"
                },
                "presentation": {
                    "type": "string",
                    "example": "Jogar com Lair of Darkness"
                }
            }
        },
        "dto.UpdateDuelistDTO": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "presentation": {
                    "type": "string"
                }
            }
        },
        "entities.Address": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "entities.Contact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "entities.Duelist": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/entities.Address"
                },
                "birthDate": {
                    "type": "string"
                },
                "contact": {
                    "$ref": "#/definitions/entities.Contact"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "presentation": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    }
}